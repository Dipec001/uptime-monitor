services:
  db:
    image: postgres:15
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  redis:
    image: redis:7-alpine
    # ports:
    # - "6379:6379"
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-alerts.yml:/etc/prometheus/prometheus-alerts.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - web
      - alertmanager

  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    env_file:
      - .env.docker
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000" # host:container
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env.docker
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A uptimemonitor worker -l info
    depends_on:
      - db
      - redis
    env_file:
      - .env.docker
    volumes:
      - .:/app
    restart: always

  beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A uptimemonitor beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - db
      - redis
    env_file:
      - .env.docker
    volumes:
      - .:/app
    restart: always

  celery-exporter:
    image: danihodovic/celery-exporter
    command:
      - "--broker-url=redis://redis:6379/0"
      - "--retry-interval=5"
    ports:
      - "9808:9808"
    depends_on:
      - redis
    restart: always


volumes:
  postgres_data:
  grafana-data:
  prometheus-data:
